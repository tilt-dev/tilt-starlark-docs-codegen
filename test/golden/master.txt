from typing import Dict, List, Optional

# AUTOGENERATED by github.com/tilt-dev/tilt-starlark-docs-codegen
# DO NOT EDIT MANUALLY


class IgnoreDef:
  """
"""
  pass


def file_watch(
  name: str,
  labels: Dict[str, str] = None,
  annotations: Dict[str, str] = None,
  watched_paths: List[str] = None,
  ignores: List[IgnoreDef] = None,
  strategy: str = "",
):
  """
  FileWatch

  Args:
    name: The name in the Object metadata.
    labels: A set of key/value pairs in the Object metadata for grouping objects.
    annotations: A set of key/value pairs in the Object metadata for attaching data to objects.
    watched_paths: WatchedPaths are paths of directories or files to watch for changes to. It cannot be empty.
      
    ignores: Ignores are optional rules to filter out a subset of changes matched by WatchedPaths.
    strategy: Strategy for testing named strings.
"""
  pass

def ignore_def(
  base_path: str = "",
  patterns: List[str] = None,
) -> IgnoreDef:
  """
  

  Args:
    base_path: BasePath is the base path for the patterns. It cannot be empty.
      
      If no patterns are specified, everything under it will be recursively ignored.
      
    patterns: Patterns are dockerignore style rules. Absolute-style patterns will be rooted to the BasePath.
      
      See https://docs.docker.com/engine/reference/builder/#dockerignore-file.
"""
  pass